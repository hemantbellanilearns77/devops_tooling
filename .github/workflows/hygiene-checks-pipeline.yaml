name: ðŸ“Š Hygiene Checks Pipeline

on:
  workflow_dispatch: # Run manually
permissions:
  actions: write
  contents: read
jobs:
  pre-setup-job:
    runs-on: windows-latest
    outputs:
      startTime: ${{ steps.start_time.outputs.startTime }}
      pre-setup-decision: ${{ steps.pre-setup.outputs.pre-setup-decision }}
      pre-setup-decision-reason: ${{ steps.pre-setup.outputs.pre-setup-decision-reason }}
      STAGE_VS_MAIN_STATE: ${{ steps.pre-setup.outputs.STAGE_VS_MAIN_STATE }}
      last-commit-msg: ${{ steps.pre-setup.outputs.LAST_COMMIT_MSG }}
      last-commit-author: ${{ steps.pre-setup.outputs.LAST_COMMIT_AUTHOR }}
    steps:
      # 1. Capture start time
      - name: Capture Start Time
        id: start_time
        shell: bash
        run: |
          startTime=$(date +%s)
          echo "ðŸ•’ Captured Start Time (epoch seconds): $startTime"
          echo "startTime=$startTime" >> $GITHUB_OUTPUT

      # 2. Checkout Code
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }} # will be "main"
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      ####################################################
      # PRE-SETUP CHECKS - DECISIONS TO EXECUTE/CANCEL
      ####################################################

      - name: Pre-Setup
        id: pre-setup
        uses: ./.github/actions/pre-setup
        with:
          github-event-name: ${{ github.event_name }}
          github-ref-name: ${{ github.ref_name }}
          github-head-commit-message: ${{ github.event.head_commit.message }}
          github-schedule: ${{ github.event.schedule }}
          github-default-branch: ${{ github.event.repository.default_branch }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  hygiene-checks-execute:
    name: Hygiene Checks - Execute
    runs-on: windows-latest
    needs: pre-setup-job
    if: ${{ needs.pre-setup-job.outputs.pre-setup-decision == 'true' }}
    env:
      SONAR_ORG: ${{ vars.SONAR_ORG }}
      SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}
      SONAR_FETCH_SLEEP_TIME: 27
      MODULE_PATHS: |
        udemy_lpa_javamasterclass_main=src/main/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_main=misc_utils/src/main/java/com/hb/study/misc_utils
        udemy_lpa_javamasterclass_test=src/test/java/com/hb/study/udemy_lpa_javamasterclass
        misc_utils_test=misc_utils/src/test/java/com/hb/study/misc_utils
      # --- Code Coverage ---
      JACOCO_MIN_COVERAGE: 75        # Require at least 75% coverage

      # --- Aggregate Violations ---
      CHECKSTYLE_PMD_MAX_TOTAL_VIOLATIONS: 567  # Maximum total violations (Checkstyle + PMD)
      CHECKSTYLE_MAX_VIOLATIONS: 441            # Max Checkstyle violations per module
      PMD_MAX_VIOLATIONS: 126                    # Max PMD violations per module

      # --- SonarCloud Severity Thresholds ---
      BLOCKER_MAX: 10      # Any Blocker fails hygiene
      HIGH_MAX: 20        # Maximum allowed high severity issues
      MEDIUM_MAX: 30      # Maximum allowed medium severity issues
      LOW_MAX: 40         # Maximum allowed low severity issues
      INFO_MAX: 50        # Maximum allowed informational issues
      STAGE_VS_MAIN_STATE: ${{ needs.pre-setup-job.outputs.STAGE_VS_MAIN_STATE }}
    steps:
      # Checkout Code
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }} # will be "main"
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      ####################################################
          # Hygiene Environment Initialization
      ####################################################
      - name: Setup Hygiene Environment
        id: setup
        uses: ./.github/actions/setup-hygiene-env
        with:
          java-version: "24"
          trigger-event: ${{ github.event_name }}
          ref-name: ${{ github.ref_name }}
          head-ref: ${{ github.head_ref }}
          base-ref: ${{ github.base_ref }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

        ###############################################################
          # HYGIENE HEALTH CHECKS AND UPLOAD REPORTS - COMPOSITE CALL
        ##############################################################

      - name: Hygiene Health Checks and Upload Reports
        id: hygiene-sweep-and-upload-reports
        uses: ./.github/actions/generate-and-upload-reports
        with:
          SKIP_FLAG: ${{ steps.setup.outputs.SKIP_FLAG }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_BIN: ${{ steps.setup.outputs.scanner_bin_win }}

        ##############################################################
          # PUBLISH GITHUB SUMMARY AND SEND-EMAIL - COMPOSITE CALL
        ##############################################################

      - name: PUBLISH GITHUB SUMMARY AND SEND-EMAIL
        id: publish-githubsummary-and-sendemail
        uses: ./.github/actions/compute-and-publish-summary
        with:
          startTime: ${{ needs.pre-setup-job.outputs.startTime }}
          SKIP_FLAG: ${{ steps.setup.outputs.SKIP_FLAG }}
          COMMIT_MSG: ${{ steps.setup.outputs.COMMIT_MSG }}
          COMMIT_AUTHOR: ${{ steps.setup.outputs.COMMIT_AUTHOR }}
          TRIGGER_EVENT: ${{ steps.setup.outputs.TRIGGER_EVENT }}
          SRC_BRANCH: ${{ steps.setup.outputs.SRC_BRANCH }}
          TGT_BRANCH: ${{ steps.setup.outputs.TGT_BRANCH }}
          BRANCH_EXECUTED: ${{ steps.setup.outputs.TGT_BRANCH }}
          ARTIFACT_URL: ${{ steps.hygiene-sweep-and-upload-reports.outputs.ARTIFACT_URL }}
          STAGE_VS_MAIN_STATE: ${{ env.STAGE_VS_MAIN_STATE }}
          JOB_STATUS: ${{ steps.hygiene-sweep-and-upload-reports.outcome }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SMTP_SERVER_ADDRESS: ${{ vars.SMTP_SERVER_ADDRESS }}
          SMTP_SERVER_PORT: ${{ vars.SMTP_SERVER_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}
          JACOCO_MIN_COVERAGE: ${{ env.JACOCO_MIN_COVERAGE }}
          CHECKSTYLE_PMD_MAX_TOTAL_VIOLATIONS: ${{ env.CHECKSTYLE_PMD_MAX_TOTAL_VIOLATIONS }}
          CHECKSTYLE_MAX_VIOLATIONS: ${{ env.CHECKSTYLE_MAX_VIOLATIONS }}
          PMD_MAX_VIOLATIONS: ${{ env.PMD_MAX_VIOLATIONS }}
          BLOCKER_MAX: ${{ env.BLOCKER_MAX }}
          HIGH_MAX: ${{ env.HIGH_MAX }}
          MEDIUM_MAX: ${{ env.MEDIUM_MAX }}
          LOW_MAX: ${{ env.LOW_MAX }}
          INFO_MAX: ${{ env.INFO_MAX }}


        #############################
          # FULL CLEANUP AND VERIFY
        ##############################

      - name: Full Cleanup and Verify Composite Call
        id: cleanup-and-verify-composite-call
        uses: ./.github/actions/full-cleanup-and-verify

  hygiene-checks-cancel:
    name: Hygiene Checks - Cancel
    runs-on: windows-latest
    needs: pre-setup-job
    if: ${{ needs.pre-setup-job.outputs.pre-setup-decision == 'false' }}
    env:
      SMTP_SERVER_ADDRESS: ${{ vars.SMTP_SERVER_ADDRESS }}
      SMTP_SERVER_PORT: ${{ vars.SMTP_SERVER_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}
    steps:
          # Checkout Code
        - name: Checkout default branch
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.repository.default_branch }} # will be "main"
            fetch-depth: 0
            token: ${{ secrets.PAT_TOKEN }}
        # Cancel gracefully if needed
        - name: Cancel current workflow gracefully
          id: cancel-hygiene
          uses: ./.github/actions/cancel-hygiene
          with:
            startTime: ${{ needs.pre-setup-job.outputs.startTime }}
            reason: ${{ needs.pre-setup-job.outputs.pre-setup-decision-reason }}
            last-commit-msg: ${{ needs.pre-setup-job.outputs.last-commit-msg }}
            last-commit-author: ${{ needs.pre-setup-job.outputs.last-commit-author }}
            github-event: ${{ github.event_name }}
            branch: ${{ github.ref_name }}
            run-id: ${{ github.run_id }}
            repository: ${{ github.repository }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
